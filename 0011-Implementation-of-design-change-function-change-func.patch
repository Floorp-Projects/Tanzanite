From d26cc759dcc241fc13cb33617539efbbf95e446d Mon Sep 17 00:00:00 2001
From: surapunoyousei <ryosukeusuusu@gmail.com>
Date: Sun, 26 Jun 2022 18:16:27 +0900
Subject: [PATCH 11/24] Implementation of design change function change
 function, automatic language change function, automatic generation function
 of userChrome.css, built-in function of userChrome.js, etc.

---
 browser/base/content/browser.js | 467 ++++++++++++++++++++++++++++++++
 1 file changed, 467 insertions(+)

diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
index 801bab733b..15c3935533 100644
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -12,6 +12,10 @@ var { AppConstants } = ChromeUtils.import(
 );
 ChromeUtils.import("resource://gre/modules/NotificationDB.jsm");
 
+//import utils
+Components.utils.import("resource://gre/modules/osfile.jsm");
+const { OS } = ChromeUtils.import("resource://gre/modules/osfile.jsm");
+
 // lazy module getters
 
 XPCOMUtils.defineLazyModuleGetters(this, {
@@ -9989,3 +9993,466 @@ var ConfirmationHint = {
     }
   },
 };
+
+/*-------------------------------------------------テーマのコーナー-----------------------------------------------------*/
+
+console.log("This Browser is Floorp. 2022 june 5th by surapunoyosei")
+
+let floorpinterfacenum = Services.prefs.getIntPref("floorp.browser.user.interface")
+
+let ThemeCSS = {
+ProtonfixUI : `@import url(chrome://browser/skin/protonfix/protonfix.css);`,
+PhotonUI : `@import url(chrome://browser/skin/photon/photonChrome.css);
+            @import url(chrome://browser/skin/photon/photonContent.css);`,
+PhotonUIMultitab : `@import url(chrome://browser/skin/photon/photonChrome-multitab.css);
+                    @import url(chrome://browser/skin/photon/photonContent-multitab.css);`,
+MaterialUI : `@import url(chrome://browser/skin/floorplegacy/floorplegacy.css);`,
+fluentUI : `@import url(chrome://browser/skin/fluentUI/fluentUI.css);`,
+gnomeUI :`@import url(chrome://browser/skin/gnomeUI/gnomeUI.css);`,
+leptonUI: `@import url(chrome://browser/skin/lepton/userChrome.css);
+           @import url(chrome://browser/skin/lepton/userContent.css);`,
+}
+
+switch(floorpinterfacenum){
+
+//ProtonUI 
+  case 1 :
+     Services.prefs.setIntPref("browser.uidensity", 0);
+     break;
+
+//ProtonUIFix
+  case 2 : 
+   var Tag = document.createElement('style');
+     Tag.innerText = ThemeCSS.ProtonfixUI;
+     document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+     Services.prefs.setIntPref("browser.uidensity", 1);
+    break;
+   
+  case 3:
+
+   if(!Services.prefs.getBoolPref("floorp.enable.multitab", false)){
+    var Tag = document.createElement('style');
+    Tag.innerText = ThemeCSS.PhotonUI;
+    document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+   }
+    else {
+     var Tag = document.createElement('style')
+       Tag.innerText = ThemeCSS.PhotonUIMultitab;
+      document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+    }
+
+    break;
+
+  case 4:
+    var Tag = document.createElement('style');
+    Tag.innerText = ThemeCSS.MaterialUI;
+    document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+
+     if (Services.prefs.getBoolPref("floorp.enable.multitab", false)) {
+      var Tag = document.createElement('style');
+      Tag.innerText =`
+     .tabbrowser-tab {
+       margin-top: 0.7em !important;
+       position: relative !important;
+       top: -0.34em !important;
+     }
+     `
+     document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+     }
+    break;
+
+  case 5:
+    if (AppConstants.platform == "win"){
+    var Tag = document.createElement('style');
+    Tag.innerText = ThemeCSS.fluentUI;
+    document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+     }
+    break;
+
+  case 6:
+     if (AppConstants.platform == "linux"){
+     var Tag = document.createElement('style');
+     Tag.innerText = ThemeCSS.gnomeUI;
+     document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+     }
+    break;
+
+  case 7:
+     var Tag = document.createElement('style');
+     Tag.innerText = ThemeCSS.leptonUI;
+     document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+     break;
+
+}
+
+/*------------------------------------------------------------- カスタムCSSのコーナー ------------------------------------------------------------------------------*/
+
+  const CustomCssPref = Services.prefs.getIntPref("floorp.browser.tabbar.settings")
+
+ //hide tabbrowser
+  switch(CustomCssPref){
+
+    case 1: break;
+
+    case 2:
+        var Tag = document.createElement('style');
+          Tag.innerText = `
+         @import url(chrome://browser/skin/customcss/hide-tabbrowser.css);
+          `
+    document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+    break;
+
+
+ // vertical tab CSS
+    case 3:
+      var Tag = document.createElement('style');
+         Tag.innerText = `
+         @import url(chrome://browser/skin/customcss/verticaltab.css);
+         `
+    document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+    break;
+
+
+ //tabs_on_bottom
+  case 4:
+
+    var Tag = document.createElement('style');
+    
+         Tag.innerText = `
+         @import url(chrome://browser/skin/customcss/tabs_on_bottom.css);
+         `
+    document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+    break;
+
+
+  case 5:
+     var Tag = document.createElement('style');
+    
+          Tag.innerText = `
+          @import url(chrome://browser/skin/customcss/classic_firefox_menu_button.css);
+          `
+     document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);   
+     break;
+  }
+
+ 
+/* ------------------------------------------------その他の設定（Mica for everyone・垂直タブフォーカス時の挙動・再度ボタン）--------------------------------------------------------*/
+
+
+//mica for everyone
+if (Services.prefs.getBoolPref("floorp.material.effect.enable",false)){
+  var Tag = document.createElement('style');
+      
+      Tag.innerText = `
+       @import url(chrome://browser/skin/optioncss/micaforeveryone.css)
+      `
+
+  document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);  
+}
+
+// ツリー型タブ
+
+if(Services.prefs.getBoolPref("floorp.Tree-type.verticaltab.optimization",false)){
+var Tag = document.createElement('style');
+      
+Tag.innerText = `
+       @import url(chrome://browser/skin/optioncss/treestyletab.css)
+      `
+
+  document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+}
+
+// side button 
+
+if (Services.prefs.getBoolPref("floorp.optimized.msbutton.ope", false)){
+  var Tag = document.createElement('style');
+      
+      Tag.innerText = `
+      @import url(chrome://browser/skin/optioncss/msbutton.css)
+      `
+
+  document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);  
+}
+
+
+//bookmarkbar auto hide
+
+if (Services.prefs.getBoolPref("floorp.bookmarks.bar.focus.mode", false)) {
+  var Tag = document.createElement('style');
+    
+    Tag.innerText = `
+    @import url(chrome://browser/skin/optioncss/bookmarkbar_autohide.css)
+    `
+
+document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+}
+
+
+//Bootmark の位置を一番下に(fake statusbar)
+
+if (Services.prefs.getBoolPref("floorp.bookmarks.fakestatus.mode", false)) {
+  var Tag = document.createElement('style');
+    
+    Tag.innerText = `  
+    @import url(chrome://browser/skin/optioncss/move_bookmarkbar.css)
+    `
+
+document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+}
+
+
+//ページ内部検索
+
+
+if (Services.prefs.getBoolPref("floorp.search.top.mode", false)) {
+  var Tag = document.createElement('style');
+    
+    Tag.innerText = `  
+    @import url(chrome://browser/skin/optioncss/move_page_inside_searchbar.css)
+     ` 
+
+     document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+}
+
+// Classic menu
+
+if (Services.prefs.getBoolPref("floorp.legacy.menu.mode", false)) {
+  var Tag = document.createElement('style');
+    
+    Tag.innerText = `
+    @import url(chrome://browser/skin/optioncss/legacy_firefox_menu_mode.css)
+    `
+
+document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+}
+
+var Tag = document.createElement('style');
+    
+    Tag.innerText = `
+    @charset "utf-8";
+    /*@version       2022/02/16 Bug 1747422 - Remove preprocessor variable use from downloads CSS*/
+    /*@version       2020/03/13 fix for 74, broken listitem orient due to Bug 1606130
+    /*@version       2019/12/11 fix for 73 Bug 1601094 - Rename remaining .xul files to .xhtml in browser */
+    /*@version        2019/10/20 12:30*/
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] { 
+      -moz-box-orient: horizontal; 
+      background-color: -moz-dialog !important;
+      padding: 0 !important; 
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] > stack:first-child {
+    }
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] #downloadsListBox { 
+      background-color: -moz-dialog !important; 
+      display:inline-block !important; 
+      overflow-y: auto !important; 
+      scrollbar-width: thin;
+      border: none !important; 
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] *|*:root
+    {
+      --downloads-item-height: 38px; 
+    }
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] richlistitem:not([hidden]) { 
+      min-width:200px !important;
+      max-width:200px !important;
+      font-size: 13px !important;
+      border-width: 0 1px 0 0 !important;
+      border-style: solid !important;
+      border-color: black !important;
+      height: 38px !important; 
+      display:-moz-inline-box !important; 
+    
+     } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] richlistitem vbox { 
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .downloadTypeIcon { 
+      height:16px !important;
+      width: 16px !important;
+      -moz-margin-end: 1px !important;
+      -moz-margin-start: 1px !important;
+       padding-right: 1px !important;
+       padding-left: 1px !important;
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .downloadTarget { 
+      margin-top:1px !important;
+      padding-bottom:16px !important;
+      max-width: calc(100% - 51px) !important; 
+      min-width: calc(100% - 51px) !important; 
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .download-state[state="0"] * .downloadTarget,
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .download-state[state="4"] * .downloadTarget { 
+      padding-bottom:0px !important;
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .downloadTarget:-moz-system-metric(windows-default-theme) { 
+      margin-top:2px !important;
+      /*padding-bottom:10px;  windows7 ?*/
+    } 
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] *|*.downloadProgres { 
+      border: none !important;
+    } 
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] *|*.downloadProgress:not([paused])::-moz-progress-bar { 
+      background-color: lime !important;
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .downloadDetails { 
+      margin-top:-12px !important;
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki]  .download-state:not(:-moz-any([state="-1"], [state="5"], [state="0"], [state="4"], [state="7"]))      .downloadDetails {
+       margin-top:-17px !important;
+    }
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] richlistitem[selected] .downloadDetails { 
+      opacity: 1 !important;
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] .downloadButton { 
+      padding: 0 !important;
+      margin: 0 !important;
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] button > .button-box { 
+      -moz-padding-start: 0px !important;
+      -moz-padding-end: 1px !important;
+      padding-right: 0 !important; 
+      padding-left: 0 !important; 
+    } 
+    
+    #contentAreaDownloadsView[ucjsDownloadsStatusModoki] #downloadFilter { 
+     width: 150px; 
+    } 
+    
+    `
+
+document.getElementsByTagName('head')[0].insertAdjacentElement('beforeend',Tag);
+
+
+/*--------------------------------------------------------userChrome.js(uc.js)のコーナー---------------------------------------------------------*/
+
+/*
+if (Services.prefs.getBoolPref("floorp.memory.free.button", false)) {
+var script = document.createElement('script');
+script.src = "chrome://userchromejs/content/memory-free.uc.js"; 
+document.head.appendChild(script); 
+}
+
+
+NOT AVIVALE TO USE
+
+if (Services.prefs.getBoolPref("floorp.entable.deepl.translate", false)) {
+var script = document.createElement('script');
+script.src = "chrome://userchromejs/content/deepl.uc.js"; 
+document.head.appendChild(script); 
+}
+*/
+
+var firefox = document.createElement('script');
+firefox.src = "chrome://userchromejs/content/chromecss.uc.js"; 
+document.head.appendChild(firefox); 
+
+var firefox = document.createElement('script');
+firefox.src = "chrome://userchromejs/content/sidebarautohide.uc.js"; 
+document.head.appendChild(firefox); 
+
+/*-----------------------------------------------スタートアップ時の処理--------------------------------------------------------*/
+
+function getSystemLocale() {
+  try {
+    return Cc["@mozilla.org/intl/ospreferences;1"].getService(
+      Ci.mozIOSPreferences
+    ).systemLocale;
+  } catch (e) {
+    return null;
+  }
+}
+
+if (!Services.prefs.prefHasUserValue("intl.locale.requested")) {
+  const systemlocale = getSystemLocale()
+  Services.prefs.setStringPref("intl.locale.requested", systemlocale)
+
+let userChromecssPath = OS.Path.join(OS.Constants.Path.profileDir, "chrome");
+//Linux, this is generally "$HOME/.floorp/Profiles/$PROFILENAME/chrome
+//Windows, this is generally "%APPDATA%\Local\temp\%PROFILENAME%"\chrome
+
+let uccpth = OS.Path.join(userChromecssPath, 'userChrome.css')
+OS.File.open(uccpth, {write: true, append: true}).then(valOpen => {
+    var txtToAppend = `
+    /*************************************************************************************************************************************************************************************************************************************************************
+
+    userChrome.cssは、スタイルシートであり、Floorp のユーザーインターフェースに適用され、デフォルトの Floorp のスタイルルールをオーバーライドできます。 残念ながら、userChrome.cssを使用して Floorp の機能操作を変更することはできません。
+
+    userChrome.cssファイルを作成し、スタイルルールを追加すると、フォントや色を変更したり、不要なアイテムを非表示にしたり、間隔を調整したり、Firefoxの外観を変更したりできます。
+
+    タブバーを削除する
+    ******************************************
+    #tabbrowser-tabs{
+      display: none;
+    }
+
+    ******************************************
+    このように、要素の非表示などを行うことができます。自分が気に入らない要素を非表示にできるので、とても便利です。ネットにはこの実装例が公開されていることがあります。
+
+    また、userChrome.css はブラウザーのツールバーに適用する CSS のことを指し、userContent.css はブラウザー内部サイトに対して CSS を適用できます。
+    詳しくは、同じディレクトリに存在するファイルを参照してください
+    
+    NOTE:適用に、about:config の操作は不要です。
+
+    参考: https://userChrome.org | https://github.com/topics/userchrome 
+
+    ************************************************************************************************************************************************************************************************************************************************************/
+
+    @charset "UTF-8";
+    @-moz-document url(chrome://browser/content/browser.xhtml) {
+    /*この下にCSSを書いてください*/
+
+
+    }
+    `;
+
+    var txtEncoded = new TextEncoder().encode(txtToAppend);
+    valOpen.write(txtEncoded)
+    valOpen.close()
+});
+
+let ucconpth = OS.Path.join(userChromecssPath, 'userContent.css')
+OS.File.open(ucconpth, {write: true, append: true}).then(valOpen => {
+  var txtToAppend = `
+  /*************************************************************************************************************************************************************************************************************************************************************
+   
+  userContent.css は userChrome.css と同じく、chrome 特権を用いてブラウザーに対して CSS スタイルルールを指定できる特殊なCSSファイルです。
+  ただし、userChrome.css と適用範囲はことなるので正しく理解しておく必要があります。
+  
+  userChrome.css は、ツールバーなどのブラウザーを制御する場所に適用するのに対し、userContent.css はブラウザー内部サイトにスタイルルールを定義できます。ただし、指定先をただしくURLで指定する必要があります。
+
+  新しいタブに CSS を書く場合
+  ***********************************
+  @-moz-document url-prefix("about:newtab"), url-prefix("about:home") {
+    
+  /*ここに CSS を書いていく*/
+
+  }
+  ***********************************
+
+  以上です。後の使い方はuserChrome.css と変わりません。Floorp をお楽しみください。
+  
+
+  ************************************************************************************************************************************************************************************************************************************************************/
+
+  @charset "UTF-8";
+
+  `;
+  var txtEncoded = new TextEncoder().encode(txtToAppend);
+  valOpen.write(txtEncoded)
+  valOpen.close()
+});
+
+}
\ No newline at end of file
-- 
2.25.1

